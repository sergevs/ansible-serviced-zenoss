- name: install zenoss serviced template package
  package: name={{ zenoss_service_package }}

- name: add zenoss template
  command: serviced template add {{ zenoss_service_template }}

- name: deploy template to serviced default pool
  shell: serviced template deploy `serviced template list | awk '/Zenoss.core/{print $1}'` default test

- name: start zenoss
  shell: serviced service start `serviced service list | awk '/Zenoss.core/{print $2}'`

- name: wait until zenoss started, that can take up to 10 min
  shell: curl -m10 -vvv -ks -H Host:zenoss5.zenoss.zenoss https://localhost 2>&1 | grep '< HTTP'
  register: http_result
  until: http_result.stdout.find('302') >= 0
  retries: 30
  delay: 10
  ignore_errors: yes
  args:
    warn: false
  tags: test

- name: reset zenoss password
  raw: serviced service attach zope sudo -Hi -u zenoss bash -c $'zendmd --commit --script=<(echo "app.acl_users.userManager.updateUserPassword(\'admin\', \'{{ admin_password }}\')")'
  when: admin_password is defined
  tags: password

- name: run the configuration script, must allocate tty so script module is used
  script: zsrv-config {{ hostvars[item].ansible_hostname }} {{ hostvars[item].pool_name | default('default') }}
  with_items: "{{ groups['zenoss'] }}"
  when: groups['zenoss'] | count > 1 and item != groups['zenoss'][0]
  tags: collector

- name: remove wrong properties
  raw: serviced service attach zope sudo -Hi -u zenoss bash -c $'zendmd --commit --script=<(echo "zport.dmd.Monitors.Performance.localhost.deleteZenProperty(\'{{ item }}\')")'
  with_items:
  - defaultRRDCreateCommand
  - renderurl 
  tags: collector

- name: add monitors
  raw: serviced service attach zope sudo -Hi -u zenoss bash -c $'zendmd --commit --script=<(echo "zport.dmd.Monitors.Performance.manage_addMonitor(\'{{ hostvars[item].ansible_hostname }}\')")'
  with_items: "{{ groups['zenoss'] }}"
  when: groups['zenoss'] | count > 1 and item != groups['zenoss'][0]
  tags: collector

- name: assign ip for zensyslog
  command: serviced service assign-ip {{ hostvars[item].ansible_hostname }}/zensyslog
  with_items: "{{ groups['zenoss'] }}"
  when: groups['zenoss'] | count > 1 and item != groups['zenoss'][0]
  tags: collector

- name: assign ip for zentrap
  command: serviced service assign-ip {{ hostvars[item].ansible_hostname }}/zentrap
  with_items: "{{ groups['zenoss'] }}"
  when: groups['zenoss'] | count > 1 and item != groups['zenoss'][0]
  tags: collector

- name: start all collector services
  command: serviced service start Zenoss.core

- name: report status
  command: serviced service status
  register: zenoss_status
  tags: test

- debug: var=zenoss_status
  tags: test

- name: add monitoring for collector hosts
  command: serviced service attach localhost/zenmodeler sudo -Hi -u zenoss zendisc run --deviceclass /Server/Linux -d {{ ansible_hostname }}
  tags: collector
